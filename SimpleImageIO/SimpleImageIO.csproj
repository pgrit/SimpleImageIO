<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Title>Simple Image IO</Title>
    <Description>A very simple C# wrapper to read and write various HDR and LDR image file formats.</Description>
    <PackageId>SimpleImageIO</PackageId>
    <Version>0.14.0</Version>
    <Copyright>(c) Pascal Grittmann</Copyright>
    <RepositoryUrl>https://github.com/pgrit/SimpleImageIO</RepositoryUrl>

    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <Authors>Pascal Grittmann</Authors>
    <IncludeBuildOutput>true</IncludeBuildOutput>
    <IsPackable>true</IsPackable>
    <PackageTags>exr hdr png image jpg</PackageTags>

    <TargetFramework>net6.0</TargetFramework>
    <!-- Each additional platform requires an entry here, once the native binaries have been added below -->
    <RuntimeIdentifiers>win-x64;linux-x64;osx-x64;osx-arm64</RuntimeIdentifiers>

    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>SimpleImageIO.Benchmark</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <ItemGroup>
    <None Remove="../PyWrapper/simpleimageio/imageViewer.js" />
    <None Remove="../PyWrapper/simpleimageio/style.css" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="../PyWrapper/simpleimageio/imageViewer.js">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </EmbeddedResource>
    <EmbeddedResource Include="../PyWrapper/simpleimageio/style.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>

  <!-- Each additional platform requires an entry here, to copy the corresponding native binaries -->
  <ItemGroup>
    <!-- Copy to the intended location for the nuget package -->
    <Content CopyToOutputDirectory="Never" Include="../runtimes/**" Pack="true" PackagePath="runtimes/" />

    <!-- Copy the native libs to the output directory so it will be found during debugging -->
    <None CopyToOutputDirectory="PreserveNewest" Include="../runtimes/win-x64/native/**"
      Condition=" $([MSBuild]::IsOsPlatform('Windows')) AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64' "/>
    <None CopyToOutputDirectory="PreserveNewest" Include="../runtimes/linux-x64/native/**"
      Condition=" $([MSBuild]::IsOsPlatform('Linux')) AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64' "/>
    <None CopyToOutputDirectory="PreserveNewest" Include="../runtimes/osx-x64/native/**"
      Condition=" $([MSBuild]::IsOsPlatform('OSX')) AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64' "/>
    <None CopyToOutputDirectory="PreserveNewest" Include="../runtimes/osx-arm64/native/**"
      Condition=" $([MSBuild]::IsOsPlatform('OSX')) AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64' "/>
  </ItemGroup>

  <ItemGroup>
    <None Include="../LICENSE" Pack="true" PackagePath=""/>
    <None Include="../THIRDPARTIES.txt" Pack="true" PackagePath=""/>
    <None Include="../README.md" Pack="true" PackagePath=""/>
  </ItemGroup>

</Project>
