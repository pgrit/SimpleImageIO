#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"}]}}

#!markdown

# FlipBook Example

This .NET interactive notebook shows how the FlipBook tool can be used with a Jupyter notebook and the .NET kernel. See Example.fsx for the F\# syntax.

First, a reference to SimpleImageIO is required, either locally or via nuget.

Then, we can load the JavaScript and CSS code that controls our flip viewers. This needs only to be done once.

(In a perfect world, the result should be written exactly once to the `<head>` element. But not a single browser seems to actually care where and how often this is written.)

#!csharp

// #r "nuget: SimpleImageIO"
#r "./SimpleImageIO/bin/Debug/net7.0/SimpleImageIO.dll"
using SimpleImageIO;
HTML(FlipBook.Header)

#!markdown

The code cell below generates two solid color images and displays them.

#!csharp

var red = new RgbImage(600, 400);
red.Fill(0.3f, 0.03f, 0.05f);
var blue = new RgbImage(600, 400);
blue.Fill(0.03f, 0.3f, 0.7f);
blue[50,50] = new(100,200,10);

HTML(FlipBook.New + ("blue", blue) + ("red", red))

#!markdown

You can save the output to a static .html page via the `Save(filename)` utility method.

#!csharp

(FlipBook.New + ("blue", blue) + ("red", red)).Save("test.html")

#!markdown

The size of the FlipBook can be specified as an argument to the constructor, as done below, or via the Resize() method of the fluent API.

#!csharp

HTML(new FlipBook(900, 800) + ("blue", blue) + ("red", red))
